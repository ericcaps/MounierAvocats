/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/core/switcher.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Togglable from"../mixin/togglable";import{keyMap}from"../util/keys";import{generateId}from"../api/instance";import{lazyload,swipe}from"../api/observables";import{$$,attr,children,closest,css,data,endsWith,findIndex,getIndex,hasClass,includes,isNode,matches,queryAll,toArray,toggleClass,within}from"uikit-util";const selDisabled=".uk-disabled *, .uk-disabled, [disabled]";export default{mixins:[Togglable],args:"connect",props:{connect:String,toggle:String,itemNav:String,active:Number,followFocus:Boolean,swiping:Boolean},data:{connect:"~.uk-switcher",toggle:"> * > :first-child",itemNav:!1,active:0,cls:"uk-active",attrItem:"uk-switcher-item",selVertical:".uk-nav",followFocus:!1,swiping:!0},computed:{connects:({connect:t},e)=>queryAll(t,e),connectChildren(){return this.connects.map((t=>children(t))).flat()},toggles:({toggle:t},e)=>$$(t,e),children(){return children(this.$el).filter((t=>this.toggles.some((e=>within(e,t)))))}},watch:{connects(t){this.swiping&&css(t,"touchAction","pan-y pinch-zoom"),this.$emit()},connectChildren(){const t=this.index();for(const e of this.connects)children(e).forEach(((e,s)=>toggleClass(e,this.cls,s===t)));this.$emit()},toggles(t){this.$emit();const e=this.index();this.show(~e?e:t[this.active]||t[0])}},connected(){attr(this.$el,"role","tablist")},observe:[lazyload({targets:({connectChildren:t})=>t}),swipe({target:({connects:t})=>t,filter:({swiping:t})=>t})],events:[{name:"click keydown",delegate(){return this.toggle},handler(t){matches(t.current,selDisabled)||"click"!==t.type&&t.keyCode!==keyMap.SPACE||(t.preventDefault(),this.show(t.current))}},{name:"keydown",delegate(){return this.toggle},handler(t){const{current:e,keyCode:s}=t,i=matches(this.$el,this.selVertical);let n=s===keyMap.HOME?0:s===keyMap.END?"last":s===keyMap.LEFT&&!i||s===keyMap.UP&&i?"previous":s===keyMap.RIGHT&&!i||s===keyMap.DOWN&&i?"next":-1;if(~n){t.preventDefault();const s=this.toggles.filter((t=>!matches(t,selDisabled))),i=s[getIndex(n,s,s.indexOf(e))];i.focus(),this.followFocus&&this.show(i)}}},{name:"click",el(){return this.connects.concat(this.itemNav?queryAll(this.itemNav,this.$el):[])},delegate(){return`[${this.attrItem}],[data-${this.attrItem}]`},handler(t){closest(t.target,"a,button")&&(t.preventDefault(),this.show(data(t.current,this.attrItem)))}},{name:"swipeRight swipeLeft",filter(){return this.swiping},el(){return this.connects},handler({type:t}){this.show(endsWith(t,"Left")?"next":"previous")}}],update(){attr(this.connects,"role","presentation"),attr(children(this.$el),"role","presentation");for(const t in this.toggles){const e=this.toggles[t],s=this.connects[0]?.children[t];attr(e,"role","tab"),s&&(e.id=generateId(this,e,`-tab-${t}`),s.id=generateId(this,s,`-tabpanel-${t}`),attr(e,"aria-controls",s.id),attr(s,{role:"tabpanel","aria-labelledby":e.id}))}attr(this.$el,"aria-orientation",matches(this.$el,this.selVertical)?"vertical":null)},methods:{index(){return findIndex(this.children,(t=>hasClass(t,this.cls)))},show(t){const e=this.toggles.filter((t=>!matches(t,selDisabled))),s=this.index(),i=getIndex(!isNode(t)||includes(e,t)?t:0,e,getIndex(this.toggles[s],e)),n=getIndex(e[i],this.toggles);this.children.forEach(((t,e)=>{toggleClass(t,this.cls,n===e),attr(this.toggles[e],{"aria-selected":n===e,tabindex:n===e?null:-1})}));const l=s>=0&&s!==i;this.connects.forEach((async({children:t})=>{await this.toggleElement(toArray(t).filter((t=>hasClass(t,this.cls))),!1,l),await this.toggleElement(t[n],!0,l)}))}}};
//# sourceMappingURL=/sm/fbab5ac20c538dc46e2b3e6f32f97862498af94d8b6e9e5eeb32c90271e01cb5.map