/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/core/img.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{parseOptions}from"../api/options";import{intersection}from"../api/observables";import{append,attr,children,createEvent,css,data,escape,fragment,hasAttr,inBrowser,includes,isArray,isEmpty,isTag,parent,queryAll,removeAttr,startsWith,trigger}from"uikit-util";const nativeLazyLoad=inBrowser&&"loading"in HTMLImageElement.prototype;export default{args:"dataSrc",props:{dataSrc:String,sources:String,margin:String,target:String,loading:String},data:{dataSrc:"",sources:!1,margin:"50%",target:!1,loading:"lazy"},connected(){"lazy"===this.loading?(nativeLazyLoad&&isImg(this.$el)&&(this.$el.loading="lazy",setSrcAttrs(this.$el)),ensureSrcAttribute(this.$el)):this.load()},disconnected(){this.img&&(this.img.onload=""),delete this.img},observe:intersection({target:({$el:t,$props:r})=>[t,...queryAll(r.target,t)],handler(t,r){this.load(),r.disconnect()},options:({margin:t})=>({rootMargin:t}),filter:({loading:t})=>"lazy"===t}),methods:{load(){if(this.img)return this.img;const t=isImg(this.$el)?this.$el:getImageFromElement(this.$el,this.dataSrc,this.sources);return removeAttr(t,"loading"),setSrcAttrs(this.$el,t.currentSrc),this.img=t}}};function setSrcAttrs(t,r){if(isImg(t)){const r=parent(t);(isTag(r,"picture")?children(r):[t]).forEach((t=>setSourceProps(t,t)))}else if(r){!includes(t.style.backgroundImage,r)&&(css(t,"backgroundImage",`url(${escape(r)})`),trigger(t,createEvent("load",!1)))}}const srcProps=["data-src","data-srcset","sizes"];function setSourceProps(t,r){srcProps.forEach((e=>{const s=data(t,e);s&&attr(r,e.replace(/^(data-)+/,""),s)}))}function getImageFromElement(t,r,e){const s=new Image;return wrapInPicture(s,e),setSourceProps(t,s),s.onload=()=>{setSrcAttrs(t,s.currentSrc)},attr(s,"src",r),s}function wrapInPicture(t,r){if((r=parseSources(r)).length){const e=fragment("<picture>");for(const t of r){const r=fragment("<source>");attr(r,t),append(e,r)}append(e,t)}}function parseSources(t){if(!t)return[];if(startsWith(t,"["))try{t=JSON.parse(t)}catch(r){t=[]}else t=parseOptions(t);return isArray(t)||(t=[t]),t.filter((t=>!isEmpty(t)))}function ensureSrcAttribute(t){isImg(t)&&!hasAttr(t,"src")&&attr(t,"src",'data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg"></svg>')}function isImg(t){return isTag(t,"img")}
//# sourceMappingURL=/sm/635f9c85e803adfb0828097856984fa2844684b920a3441c969431ad6238aa33.map