/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/core/toggle.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Media from"../mixin/media";import Togglable from"../mixin/togglable";import{lazyload}from"../api/observables";import{attr,closest,hasAttr,hasClass,includes,isFocusable,isTag,isTouch,matches,once,pointerDown,pointerEnter,pointerLeave,queryAll,trigger,within}from"uikit-util";const KEY_SPACE=32;export default{mixins:[Media,Togglable],args:"target",props:{href:String,target:null,mode:"list",queued:Boolean},data:{href:!1,target:!1,mode:"click",queued:!0},computed:{target:({href:e,target:t},i)=>(t=queryAll(t||e,i)).length&&t||[i]},connected(){includes(this.mode,"media")||(isFocusable(this.$el)||attr(this.$el,"tabindex","0"),!this.cls&&isTag(this.$el,"a")&&attr(this.$el,"role","button"))},observe:lazyload({target:({target:e})=>e}),events:[{name:pointerDown,filter(){return includes(this.mode,"hover")},handler(e){this._preventClick=null,!isTouch(e)||this._showState||this.$el.disabled||(trigger(this.$el,"focus"),once(document,pointerDown,(()=>trigger(this.$el,"blur")),!0,(e=>!within(e.target,this.$el))),includes(this.mode,"click")&&(this._preventClick=!0))}},{name:`${pointerEnter} ${pointerLeave} focus blur`,filter(){return includes(this.mode,"hover")},handler(e){if(isTouch(e)||this.$el.disabled)return;const t=includes([pointerEnter,"focus"],e.type),i=this.isToggled(this.target);!t&&(e.type===pointerLeave&&matches(this.$el,":focus")||"blur"===e.type&&matches(this.$el,":hover"))||(this._showState&&t&&i!==this._showState?t||(this._showState=null):(this._showState=t?i:null,this.toggle("toggle"+(t?"show":"hide"))))}},{name:"keydown",filter(){return includes(this.mode,"click")&&!isTag(this.$el,"input")},handler(e){32===e.keyCode&&(e.preventDefault(),this.$el.click())}},{name:"click",filter(){return["click","hover"].some((e=>includes(this.mode,e)))},handler(e){let t;(this._preventClick||closest(e.target,'a[href="#"], a[href=""]')||(t=closest(e.target,"a[href]"))&&(!this.isToggled(this.target)||t.hash&&matches(this.target,t.hash)))&&e.preventDefault(),!this._preventClick&&includes(this.mode,"click")&&this.toggle()}},{name:"mediachange",filter(){return includes(this.mode,"media")},el(){return this.target},handler(e,t){t.matches^this.isToggled(this.target)&&this.toggle()}}],methods:{async toggle(e){if(!trigger(this.target,e||"toggle",[this]))return;if(hasAttr(this.$el,"aria-expanded")&&attr(this.$el,"aria-expanded",!this.isToggled(this.target)),!this.queued)return this.toggleElement(this.target);const t=this.target.filter((e=>hasClass(e,this.clsLeave)));if(t.length){for(const e of this.target){const i=includes(t,e);this.toggleElement(e,i,i)}return}const i=this.target.filter(this.isToggled);await this.toggleElement(i,!1),await this.toggleElement(this.target.filter((e=>!includes(i,e))),!0)}}};
//# sourceMappingURL=/sm/b512e05c24ac65062cc6bedf36393319f57a41093cf19b7248c2f237b8ea704b.map