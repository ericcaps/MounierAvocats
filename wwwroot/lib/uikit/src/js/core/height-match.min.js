/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/core/height-match.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getRows}from"./margin";import{resize}from"../api/observables";import{$$,boxModelAdjust,css,dimensions,isVisible,pick}from"uikit-util";export default{args:"target",props:{target:String,row:Boolean},data:{target:"> *",row:!0},computed:{elements:({target:e},t)=>$$(e,t)},observe:resize({target:({$el:e,elements:t})=>[e,...t]}),update:{read(){return{rows:(this.row?getRows(this.elements):[this.elements]).map(match)}},write({rows:e}){for(const{heights:t,elements:s}of e)s.forEach(((e,s)=>css(e,"minHeight",t[s])))},events:["resize"]}};function match(e){if(e.length<2)return{heights:[""],elements:e};let t=e.map(getHeight);const s=Math.max(...t);return{heights:e.map(((e,i)=>t[i].toFixed(2)===s.toFixed(2)?"":s)),elements:e}}function getHeight(e){const t=pick(e.style,["display","minHeight"]);isVisible(e)||css(e,"display","block","important"),css(e,"minHeight","");const s=dimensions(e).height-boxModelAdjust(e,"height","content-box");return css(e,t),s}
//# sourceMappingURL=/sm/10a271da8240f8ea078a22934500939a01264ceafbde685395a45560d7294478.map