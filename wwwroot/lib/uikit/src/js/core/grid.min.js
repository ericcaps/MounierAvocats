/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/core/grid.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{scroll}from"../api/observables";import Margin from"./margin";import Class from"../mixin/class";import{addClass,children,css,hasClass,scrolledOver,sortBy,sumBy,toFloat,toggleClass}from"uikit-util";export default{extends:Margin,mixins:[Class],name:"grid",props:{masonry:Boolean,parallax:Number},data:{margin:"uk-grid-margin",clsStack:"uk-grid-stack",masonry:!1,parallax:0},connected(){this.masonry&&addClass(this.$el,"uk-flex-top uk-flex-wrap-top")},observe:scroll({filter:({parallax:s})=>s}),update:[{write({columns:s}){toggleClass(this.$el,this.clsStack,s.length<2)},events:["resize"]},{read(s){let{columns:t,rows:a}=s;if(!t.length||!this.masonry&&!this.parallax||positionedAbsolute(this.$el))return s.translates=!1,!1;let e=!1;const r=children(this.$el),l=t.map((s=>sumBy(s,"offsetHeight"))),i=getMarginTop(r,this.margin)*(a.length-1),o=Math.max(...l)+i;this.masonry&&(t=t.map((s=>sortBy(s,"offsetTop"))),e=getTranslates(a,t));let n=Math.abs(this.parallax);return n&&(n=l.reduce(((s,t,a)=>Math.max(s,t+i+(a%2?n:n/8)-o)),0)),{padding:n,columns:t,translates:e,height:e?o:""}},write({height:s,padding:t}){css(this.$el,"paddingBottom",t||""),!1!==s&&css(this.$el,"height",s)},events:["resize"]},{read(){return(!this.parallax||!positionedAbsolute(this.$el))&&{scrolled:!!this.parallax&&scrolledOver(this.$el)*Math.abs(this.parallax)}},write({columns:s,scrolled:t,translates:a}){(!1!==t||a)&&s.forEach(((s,e)=>s.forEach(((s,r)=>css(s,"transform",t||a?`translateY(${(a&&-a[e][r])+(t?e%2?t:t/8:0)}px)`:"")))))},events:["scroll","resize"]}]};function positionedAbsolute(s){return children(s).some((s=>"absolute"===css(s,"position")))}function getTranslates(s,t){const a=s.map((s=>Math.max(...s.map((s=>s.offsetHeight)))));return t.map((s=>{let t=0;return s.map(((e,r)=>t+=r?a[r-1]-s[r-1].offsetHeight:0))}))}function getMarginTop(s,t){const[a]=s.filter((s=>hasClass(s,t)));return toFloat(a?css(a,"marginTop"):css(s[0],"paddingLeft"))}
//# sourceMappingURL=/sm/71d77981178d626df53a69441c599769aed684d36816e367839aa1f670b7e51d.map