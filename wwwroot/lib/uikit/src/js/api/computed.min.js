/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/api/computed.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{runWatches}from"./watch";import{callUpdate,prependUpdate}from"./update";import{hasOwn,isUndefined}from"uikit-util";export function initComputed(e){const{computed:t}=e.$options;if(e._computed={},t)for(const o in t)registerComputed(e,o,t[o])}export function registerComputed(e,t,o){e._hasComputed=!0,Object.defineProperty(e,t,{enumerable:!0,get(){const{_computed:n,$props:r,$el:s}=e;return hasOwn(n,t)||(n[t]=(o.get||o).call(e,r,s)),n[t]},set(n){const{_computed:r}=e;r[t]=o.set?o.set.call(e,n):n,isUndefined(r[t])&&delete r[t]}})}export function initComputedUpdates(e){e._hasComputed&&(prependUpdate(e,{read:()=>runWatches(e,resetComputed(e)),events:["resize","computed"]}),registerComputedObserver(),instances.add(e))}export function disconnectComputedUpdates(e){instances?.delete(e),resetComputed(e)}function resetComputed(e){const t={...e._computed};return e._computed={},t}let observer,instances;function registerComputedObserver(){observer||(instances=new Set,observer=new MutationObserver((()=>{for(const e of instances)callUpdate(e,"computed")})),observer.observe(document,{childList:!0,subtree:!0}))}
//# sourceMappingURL=/sm/96265053a58bb252b97cb0384fcf94841c58617cc6802f12645416bf2b82d644.map