/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/uikit@3.16.12/src/js/api/props.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{registerObserver}from"./observer";import{coerce,parseOptions}from"./options";import{camelize,data as getData,hasOwn,hyphenate,isUndefined,startsWith}from"uikit-util";export function initProps(e){const t=getProps(e.$options);for(let o in t)isUndefined(t[o])||(e.$props[o]=t[o]);const o=[e.$options.computed,e.$options.methods];for(let r in e.$props)r in t&&notIn(o,r)&&(e[r]=e.$props[r])}export function getProps(e){const t={},{args:o=[],props:r={},el:n,id:s}=e;if(!r)return t;for(const e in r){const o=hyphenate(e);let s=getData(n,o);isUndefined(s)||(s=r[e]===Boolean&&""===s||coerce(r[e],s),"target"===o&&startsWith(s,"_")||(t[e]=s))}const i=parseOptions(getData(n,s),o);for(const e in i){const o=camelize(e);isUndefined(r[o])||(t[o]=coerce(r[o],i[e]))}return t}function notIn(e,t){return e.every((e=>!e||!hasOwn(e,t)))}export function initPropsObserver(e){const{$options:t,$props:o}=e,{id:r,props:n,el:s}=t;if(!n)return;const i=Object.keys(n),a=i.map((e=>hyphenate(e))).concat(r),p=new MutationObserver((n=>{const s=getProps(t);n.some((({attributeName:e})=>{const t=e.replace("data-","");return(t===r?i:[camelize(t),camelize(e)]).some((e=>!isUndefined(s[e])&&s[e]!==o[e]))}))&&e.$reset()}));p.observe(s,{attributes:!0,attributeFilter:a.concat(a.map((e=>`data-${e}`)))}),registerObserver(e,p)}
//# sourceMappingURL=/sm/19e941e6c1a6a68236a28f1cecf30376036c5be7032b5dbfb3551d70b2d52d02.map